{"version":3,"file":"static/js/100.e6c340d0.chunk.js","mappings":"yLAIaA,EAAeC,EAAAA,GAAAA,IAAAA,WAAH,yEAAGA,CAAH,6LAGL,qBAAGC,MAAkBC,OAAOC,SACb,qBAAGF,MAAkBC,OAAOE,SAE3DC,EAAAA,EAAAA,IAAU,SAAU,SAAU,QAGjB,qBAAGJ,MAAkBC,OAAOE,S,SCG7C,EAXmB,WACjB,IACME,GADeC,EAAAA,EAAAA,MAAbC,SACuBC,MAAM,GAAGC,cAExC,OACE,SAACX,EAAD,WACE,SAAC,KAAD,UAAaO,Q,6ECEnB,EAV4B,SAACK,GAC3B,IAAMC,GAAcC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,YAMpD,OAJyBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOJ,EAAYK,QAAO,SAACC,GAAD,OAAaA,EAAQC,WAAaR,OAC3D,CAACA,EAAYC,K,yDCyBlB,EApBuB,SAAC,GAA+B,IAA7BM,EAA4B,EAA5BA,QAClBE,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,IAAgBH,GAC3BI,GAAeC,EAAAA,EAAAA,IAAaP,EAAQQ,cAAcJ,IAExD,OACE,UAAC,KAAD,CAAeK,GAAG,UAAlB,WACE,SAAC,KAAD,WACE,gBAAKC,IAAKJ,EAAcK,IAAKX,EAAQY,UAEvC,UAAC,KAAD,WACGZ,EAAQa,MAAO,SAAC,KAAD,CAAiBJ,GAAG,KAApB,0BAChB,SAAC,KAAD,CAAeA,GAAG,KAAlB,SAAwBT,EAAQY,QAChC,SAAC,KAAD,CAAaE,UAAU,OAAvB,SAA+Bd,EAAQe,kBAEzC,SAAC,KAAD,CAAaC,GAAE,oBAAehB,EAAQiB,MAAtC,6B,8BCvBOC,EAAiBpC,EAAAA,GAAAA,QAAAA,WAAH,yEAAGA,CAAH,0RACvBqC,EAAAA,EAAAA,IAAU,MAAO,QAKVC,EAAAA,EAAAA,OAmBAA,EAAAA,EAAAA,kBCTX,EAZiB,SAAC,GAAiC,IAA/BnB,EAA8B,EAA9BA,SACZoB,EAAmBC,EAAoBrB,GAE7C,OACE,SAACiB,EAAD,UACGG,EAAiBE,KAAI,SAACvB,GAAD,OACpB,SAAC,EAAD,CAAiCA,QAASA,GAArBA,EAAQwB,W,sECHrC,UARkB,kBAChB,iCACE,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,IAAD,CAAUvB,SAAS","sources":["components/Header/PageBanner.styled.ts","components/Header/PageBanner.tsx","hooks/useSelectedProducts.ts","components/Product/ProductPreview.tsx","components/Product/Products.styled.ts","components/Product/Products.tsx","pages/Earphones.tsx"],"sourcesContent":["import styled from 'styled-components/macro';\n\nimport { flexMixin } from 'shared/mixins';\n\nexport const StyledBanner = styled.div`\n  height: 17.5vh;\n  width: 100%;\n  background: rgb(${({ theme }) => theme.colors.black});\n  border-top: 0.25rem solid rgba(${({ theme }) => theme.colors.white}, 0.104);\n  padding-block: 5vh;\n  ${flexMixin('center', 'center', 'row')};\n\n  h1 {\n    color: rgb(${({ theme }) => theme.colors.white});\n    font-size: 3.25rem;\n    font-weight: 600;\n    letter-spacing: 0.5rem;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { BigHeading } from 'components/UI/Text.styled';\nimport { StyledBanner } from './PageBanner.styled';\n\nconst PageBanner = () => {\n  const { pathname } = useLocation();\n  const formattedPath = pathname.slice(1).toUpperCase();\n\n  return (\n    <StyledBanner>\n      <BigHeading>{formattedPath}</BigHeading>\n    </StyledBanner>\n  );\n};\n\nexport default PageBanner;\n","import { useAppSelector } from 'app/hooks';\nimport { useMemo } from 'react';\n\nconst useSelectedProducts = (identifier: string) => {\n  const allProducts = useAppSelector((state) => state.products);\n\n  const selectedProducts = useMemo(() => {\n    return allProducts.filter((product) => product.category === identifier);\n  }, [identifier, allProducts]);\n\n  return selectedProducts;\n};\n\nexport default useSelectedProducts;\n","import useWindowWidth from 'hooks/useWindow';\nimport { derivedViewport, getImagePath } from 'utils/utilities';\n\nimport { ProductType } from 'shared/models/product.model';\n\nimport { Description, MediumHeading, SmallSubheading } from 'components/UI/Text.styled';\nimport { ProductLink } from 'components/UI/Button.styled';\nimport { StyledPreview, StyledImageCont, StyledText } from './ProductPreview.styled';\n\ntype ProductProps = {\n  product: ProductType;\n};\n\nconst ProductPreview = ({ product }: ProductProps) => {\n  const width = useWindowWidth();\n  const viewport = derivedViewport(width);\n  const productImage = getImagePath(product.categoryImage[viewport]);\n\n  return (\n    <StyledPreview as=\"article\">\n      <StyledImageCont>\n        <img src={productImage} alt={product.name} />\n      </StyledImageCont>\n      <StyledText>\n        {product.new && <SmallSubheading as=\"h1\">NEW PRODUCT</SmallSubheading>}\n        <MediumHeading as=\"h2\">{product.name}</MediumHeading>\n        <Description className=\"desc\">{product.description}</Description>\n      </StyledText>\n      <ProductLink to={`/products/${product.slug}`}>SEE PRODUCT</ProductLink>\n    </StyledPreview>\n  );\n};\n\nexport default ProductPreview;\n","import styled from 'styled-components/macro';\n\nimport { devices } from 'shared/breakpoints';\nimport { gridMixin } from 'shared/mixins';\n\nexport const StyledProducts = styled.section`\n  ${gridMixin('1fr', 'auto')};\n  padding: 0;\n  gap: 10vh;\n  margin: 2vh 0 10vh 0;\n\n  @media ${devices.laptop} {\n    min-height: initial;\n    padding-inline: 5%;\n    margin-block: 0;\n    margin: 5vh 0 12.5vh 0;\n\n    /* reversing the order of the second product in preview */\n    & > :nth-child(2) {\n      & > :nth-child(1) {\n        grid-area: 1/2/3/3;\n      }\n      & > :nth-child(2) {\n        grid-area: 1/1/2/1;\n      }\n      & > a {\n        grid-area: 2/1/2/1;\n      }\n    }\n  }\n  @media ${devices.landscapeMobileM} {\n    margin: 5vh 0 15vh 0;\n  }\n`;\n","import useSelectedProducts from 'hooks/useSelectedProducts';\n\nimport ProductPreview from 'components/Product/ProductPreview';\nimport { StyledProducts } from './Products.styled';\n\ntype ProductsProps = {\n  category: string;\n};\n\nconst Products = ({ category }: ProductsProps) => {\n  const selectedCategory = useSelectedProducts(category);\n\n  return (\n    <StyledProducts>\n      {selectedCategory.map((product) => (\n        <ProductPreview key={product.id} product={product} />\n      ))}\n    </StyledProducts>\n  );\n};\n\nexport default Products;\n","import Products from 'components/Product/Products';\nimport ScrollTop from 'components/UI/ScrollTop';\nimport PageBanner from 'components/Header/PageBanner';\n\nconst Earphones = () => (\n  <>\n    <ScrollTop />\n    <PageBanner />\n    <Products category=\"earphones\" />\n  </>\n);\n\nexport default Earphones;\n"],"names":["StyledBanner","styled","theme","colors","black","white","flexMixin","formattedPath","useLocation","pathname","slice","toUpperCase","identifier","allProducts","useAppSelector","state","products","useMemo","filter","product","category","width","useWindowWidth","viewport","derivedViewport","productImage","getImagePath","categoryImage","as","src","alt","name","new","className","description","to","slug","StyledProducts","gridMixin","devices","selectedCategory","useSelectedProducts","map","id"],"sourceRoot":""}